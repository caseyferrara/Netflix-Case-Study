-- Splitting genres and extracting the year from the date_added
WITH SplitGenres AS (
  SELECT 
    EXTRACT(YEAR FROM DATE(date_added)) AS added_year, -- Extracting year from date_added
    title,
    genre
  FROM 
    `data-project-99299.netflix.netflix_titles`,
    UNNEST(SPLIT(listed_in, ', ')) AS genre -- Splitting genres into separate rows
  WHERE
    DATE(date_added) IS NOT NULL -- Filtering out rows with null dates
),
-- Counting titles per genre for each year
GenreCounts AS (
  SELECT 
    added_year, 
    genre, 
    COUNT(title) AS title_count
  FROM 
    SplitGenres
  GROUP BY 
    added_year, genre
),
-- Calculating the percentage of each genre per year
YearlyGenreTrends AS (
  SELECT 
    added_year, 
    genre, 
    title_count,
    SUM(title_count) OVER (PARTITION BY added_year) AS total_titles_year, -- Total titles per year
    (title_count / NULLIF(SUM(title_count) OVER (PARTITION BY added_year), 0)) * 100 AS genre_percentage_year -- Genre percentage calculation
  FROM 
    GenreCounts
)
-- Final selection of the year, genre, title count, and genre percentage
SELECT 
  added_year, 
  genre, 
  title_count,
  genre_percentage_year
FROM 
  YearlyGenreTrends
ORDER BY 
  added_year DESC, genre_percentage_year DESC; -- Ordering by year and genre percentage

-- Calculating content count by type and year
WITH ContentCount AS (
  SELECT 
    EXTRACT(YEAR FROM DATE(date_added)) AS added_year, -- Extracting year from date_added
    type, 
    COUNT(show_id) AS count
  FROM 
    `data-project-99299.netflix.netflix_titles`
  WHERE
    DATE(date_added) IS NOT NULL
  GROUP BY 
    added_year, type
),
-- Summing the total count per year
TotalCountPerYear AS (
  SELECT 
    added_year, 
    SUM(count) AS total_count
  FROM 
    ContentCount
  GROUP BY 
    added_year
)
-- Selecting the year, type, count, and calculating the percentage of type
SELECT 
  a.added_year, 
  a.type, 
  a.count,
  (a.count / NULLIF(b.total_count, 0)) * 100 AS type_percentage
FROM 
  ContentCount a
JOIN 
  TotalCountPerYear b ON a.added_year = b.added_year
ORDER BY 
  a.added_year, a.type; -- Ordering by year and type

-- Calculating the yearly title count
WITH YearlyTitleCount AS (
  SELECT 
    EXTRACT(YEAR FROM DATE(date_added)) AS added_year, -- Extracting year from date_added
    COUNT(show_id) AS title_count
  FROM 
    `data-project-99299.netflix.netflix_titles`
  WHERE
    DATE(date_added) IS NOT NULL
  GROUP BY 
    added_year
),
-- Calculating growth by comparing with the previous year
YearlyGrowth AS (
  SELECT 
    added_year,
    title_count,
    LAG(title_count) OVER (ORDER BY added_year) AS previous_year_count -- Calculating previous year's count
  FROM 
    YearlyTitleCount
)
-- Selecting year, title count, previous year count, and calculating growth rate
SELECT 
  added_year,
  title_count,
  previous_year_count,
  ((title_count - previous_year_count) / NULLIF(previous_year_count, 0)) * 100 AS growth_rate
FROM 
  YearlyGrowth
WHERE 
  previous_year_count IS NOT NULL
ORDER BY 
  added_year DESC; -- Ordering by year in descending order

-- Splitting countries and genres, then counting titles per country, type, and genre
WITH SplitCountriesAndGenres AS (
  SELECT 
    show_id,
    type,
    SPLIT(country, ', ') AS country_array, -- Splitting country into an array
    SPLIT(listed_in, ', ') AS genre_array -- Splitting genre into an array
  FROM 
    `data-project-99299.netflix.netflix_titles`
),
-- Unnesting country and genre arrays
ExplodedCountriesAndGenres AS (
  SELECT 
    show_id,
    type,
    country,
    genre
  FROM 
    SplitCountriesAndGenres,
    UNNEST(country_array) AS country, -- Unnesting country array
    UNNEST(genre_array) AS genre -- Unnesting genre array
  WHERE 
    country IS NOT NULL AND genre IS NOT NULL
)
-- Selecting country, type, genre, and counting distinct show IDs
SELECT 
  country,
  type,
  genre,
  COUNT(DISTINCT show_id) AS title_count
FROM 
  ExplodedCountriesAndGenres
GROUP BY 
  country, type, genre
ORDER BY 
  country, type, title_count DESC; -- Ordering by country, type, and title count
